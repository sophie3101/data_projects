version: "3.9"
services:
  redpanda-1:
    image: redpandadata/redpanda:v24.2.18
    container_name: redpanda-1
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '1'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda-1:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda-1:28082,OUTSIDE://localhost:8082
      - --rpc-addr
      - 0.0.0.0:33145
      - --advertise-rpc-addr
      - redpanda-1:33145
    ports:
      - 8082:8082
      - 9092:9092
      - 28082:28082
      - 29092:29092

  python-client:
    build:
        context: .
        dockerfile: ./Dockerfile
    container_name: python-client
    command: tail -f /dev/null   # Keeps container running indefinitely
    depends_on:
      - redpanda-1
    volumes:
      - ./src/:/src/

  spark-master:
    image: bitnami/spark:latest
    hostname: spark-master
    ports:
      - "8081:8080" # Spark UI
      - "7077:7077" # Spark Master Port
    environment:
      SPARK_MODE: master
      SPARK_RPC_AUTHENTICATION_ENABLED: no
      SPARK_RPC_ENCRYPTION_ENABLED: no
      SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no

  spark-worker:
        image: bitnami/spark:latest
        hostname: spark-worker
        depends_on:
          - spark-master
        environment:
          SPARK_MODE: worker
          SPARK_MASTER_URL: spark://spark-master:7077
          SPARK_WORKER_CORES: 1
          SPARK_WORKER_MEMORY: 1g
          SPARK_RPC_AUTHENTICATION_ENABLED: no
          SPARK_RPC_ENCRYPTION_ENABLED: no
          SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED: no

  postgres:
    image: postgres:14
    restart: on-failure
    container_name: "postgres"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    extra_hosts:
     - "host.docker.internal:127.0.0.1" #// Linux
     - "host.docker.internal:host-gateway" #// Access services on the host machine from within the Docker container
  
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "8080:80"

  grafana:
    image: grafana/grafana:latest # Or grafana/grafana for open-source
    container_name: grafana
    ports:
      - '3000:3000' # Host_Port:Container_Port
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana # Persistent storage for Grafana data
    depends_on:
      - postgres
  
volumes:
    grafana-storage: